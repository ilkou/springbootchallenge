plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'com.google.cloud.tools.jib' version '3.1.4'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
	id 'java'
}

group = 'io.github.ilkou'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'com.h2database:h2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

	implementation 'com.google.guava:guava:28.1-jre'

	implementation 'net.datafaker:datafaker:1.4.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// uncomment to enable fluentd (when there's a running docker instance)
//	implementation 'com.sndyuk:logback-more-appenders:1.5.6'
//	implementation 'org.fluentd:fluent-logger:0.3.4'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
	}
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

tasks.named('sonarqube').configure {
	dependsOn test
}
sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9001'
		property 'sonar.projectKey', 'cirestech'
		property 'sonar.login', 'admin'
		property 'sonar.password', 'testtesttest'
	}
}

jib {
	allowInsecureRegistries = true
	from {
		image = 'openjdk:8-jdk-oraclelinux7'
	}
	to {
		tags = ['latest', project.version]
		image = 'server-ip-addr:registry-port/cirestech'
		auth {
			username = ''
			password = ''
		}
	}
}
